name: Release

on:
  push:
    branches:
      - 'main'

jobs:
  qa:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_next_version.outputs.version }}
    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Use Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.18'
    - name: Get next version
      id: get_next_version
      uses: ./
    - name: Create new version
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      run: |
        NEXT_VERSION=${{ steps.get_next_version.outputs.version }}

        git tag $NEXT_VERSION
        git push origin $NEXT_VERSION
    - name: Build artifacts
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      run: |
        make build-all
    - name: Release new version
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/*"
        tag: ${{ steps.get_next_version.outputs.version }}
  build_image:
    runs-on: ubuntu-latest
    needs: qa
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: forestsoft/get-next-version:${{needs.qa.outputs.version}}

   